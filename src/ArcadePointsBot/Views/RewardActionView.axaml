<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:models="using:AvaloniaApplication1.Models"
             xmlns:vm="using:AvaloniaApplication1.ViewModels"
             mc:Ignorable="d" d:DesignWidth="820" MinHeight="50" MinWidth="400"
             x:Class="AvaloniaApplication1.Views.RewardActionView"
             x:DataType="vm:RewardActionViewModel">
  
  <Border BorderBrush="White" BorderThickness="1" CornerRadius="5">
    <DockPanel>
      <ComboBox Name="ActionSelect" VerticalAlignment="Center" Margin="5,0,10,0"
                PlaceholderText="Action Type" ItemsSource="{Binding ActionValues}"
                SelectedItem="{Binding ActionType}"/>
      <StackPanel Name="Keyboard" Orientation="Horizontal" IsVisible="False">
        <ComboBox VerticalAlignment="Center" Margin="0,0,10,0"
                  PlaceholderText="Key Action Type" ItemsSource="{Binding KeyboardActionValues}"
                  SelectedItem="{Binding ActionKeyType}"/>
        <NumericUpDown VerticalAlignment="Center" Margin="0,0,10,0" MinWidth="150"
                       Name="Duration" Watermark="Duration milliseconds" Minimum="100" Increment="1" Value="{Binding Duration}"/>
        <ComboBox VerticalAlignment="Center" PlaceholderText="Keyboard key" ItemsSource="{Binding KeyboardValues}" SelectedItem="{Binding ActionKey}"/>
      </StackPanel>
      <StackPanel Name="Mouse" Orientation="Horizontal" IsVisible="False">
        <ComboBox VerticalAlignment="Center" Margin="0,0,10,0"
                  PlaceholderText="Mouse Action Type" ItemsSource="{Binding MouseActionValues}"
                  SelectedItem="{Binding ActionKeyType}"/>
        <NumericUpDown VerticalAlignment="Center" Margin="0,0,10,0" MinWidth="150"
                       Name="DurationMouse" Watermark="Duration milliseconds" Minimum="100" Increment="1" Value="{Binding Duration}"/>
        <ComboBox VerticalAlignment="Center" PlaceholderText="Mouse Button" ItemsSource="{Binding MouseValues}" SelectedItem="{Binding ActionKey}"/>
      </StackPanel>

      <Button DockPanel.Dock="Right" Margin="0,5,5,5"
              Command="{ReflectionBinding Path=DataContext.RemoveActionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
              CommandParameter="{Binding }">
        <PathIcon Data="{StaticResource line_horizontal_1_regular}"/>
      </Button>
      <StackPanel DockPanel.Dock="Right" Margin="0,0,5,0" VerticalAlignment="Center">
        <Button IsVisible="False" IsEnabled="False" MaxHeight="16" CornerRadius="5,0" Margin="0" BorderThickness="0">
          <PathIcon Data="{StaticResource chevron_up_regular}"/>
        </Button>
        <Button IsVisible="False" IsEnabled="False" MaxHeight="16" CornerRadius="0,5" Margin="0" BorderThickness="0">
          <PathIcon Data="{StaticResource chevron_down_regular}"/>
        </Button>
      </StackPanel>
      <Button DockPanel.Dock="Right" Margin="0,0,5,0" Content="Duplicate"
                      Command="{ReflectionBinding Path=DataContext.DupeActionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                      CommandParameter="{Binding }"/>
      <Grid></Grid>
    </DockPanel>
  </Border>

  <i:Interaction.Behaviors>
    <ia:DataTriggerBehavior Binding="{Binding ActionKeyType}" ComparisonCondition="NotEqual" Value="{StaticResource ActionType1}">
      <ia:ChangePropertyAction TargetObject="{Binding #Duration}" PropertyName="IsVisible" Value="False"/>
      <ia:ChangePropertyAction TargetObject="{Binding #DurationMouse}" PropertyName="IsVisible" Value="False"/>
    </ia:DataTriggerBehavior>
    <ia:DataTriggerBehavior Binding="{Binding ActionKeyType}" ComparisonCondition="Equal" Value="{StaticResource ActionType1}">
      <ia:ChangePropertyAction TargetObject="{Binding #Duration}" PropertyName="IsVisible" Value="True"/>
      <ia:ChangePropertyAction TargetObject="{Binding #DurationMouse}" PropertyName="IsVisible" Value="True"/>
    </ia:DataTriggerBehavior>

    <ia:DataTriggerBehavior Binding="{Binding ActionType}" ComparisonCondition="Equal" Value="{StaticResource KeyboardAction}">
      <ia:ChangePropertyAction TargetObject="{Binding #Keyboard}" PropertyName="IsVisible" Value="True"/>
      <ia:ChangePropertyAction TargetObject="{Binding #Mouse}" PropertyName="IsVisible" Value="False"/>
    </ia:DataTriggerBehavior>
    <ia:DataTriggerBehavior Binding="{Binding ActionType}" ComparisonCondition="Equal" Value="{StaticResource MouseAction}">
      <ia:ChangePropertyAction TargetObject="{Binding #Keyboard}" PropertyName="IsVisible" Value="False"/>
      <ia:ChangePropertyAction TargetObject="{Binding #Mouse}" PropertyName="IsVisible" Value="True"/>
    </ia:DataTriggerBehavior>
  </i:Interaction.Behaviors>
</UserControl>
